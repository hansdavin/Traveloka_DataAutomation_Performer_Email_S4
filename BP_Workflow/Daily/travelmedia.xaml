<Activity mc:Ignorable="sap sap2010" x:Class="travelmedia" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_dicPath" Type="InArgument(scg:Dictionary(x:String, x:String))" />
    <x:Property Name="in_datePeriod" Type="InArgument(s:DateTime)" />
    <x:Property Name="in_isRerun" Type="InArgument(x:Boolean)" />
    <x:Property Name="in_TransactionItem" Type="InArgument(ui:QueueItem)" />
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1252,6909.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>travelmedia_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>System.Activities.Runtime.Collections</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
      <x:String>FuzzierSharp</x:String>
      <x:String>System.Globalization</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>System.Linq.Expressions</x:String>
      <x:String>System.Numerics</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.Linq.Async</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Text.RegularExpressions</AssemblyReference>
      <AssemblyReference>FuzzierSharp</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR.StudioWeb.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.GSuite.Activities</AssemblyReference>
      <AssemblyReference>UiPath.DocumentUnderstanding.ML.Activities</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Linq.Async.Queryable</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Main takeaways:&#xA;1. Set global datetime in orchestrator asset to default (;)&#xA;2. Set global date end period in orchestrator&#xA;3. Check local folder path if file already exists or not&#xA;4. Daily: H-0" DisplayName="travelmedia" sap:VirtualizedContainerService.HintSize="930.4,6844.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="strFilePath" />
      <Variable x:TypeArguments="x:Boolean" Name="isFileExist" />
      <Variable x:TypeArguments="x:String" Name="strFolderPath" />
      <Variable x:TypeArguments="x:Boolean" Name="isFileNotRerunExist" />
      <Variable x:TypeArguments="x:Boolean" Name="isFolderNotRerunExist" />
      <Variable x:TypeArguments="x:String" Name="strRawFolderPath" />
      <Variable x:TypeArguments="x:String" Name="strRawFilePathQueue" />
      <Variable x:TypeArguments="x:String" Name="strRawFilePath" />
      <Variable x:TypeArguments="scg:List(snm:MailMessage)" Name="listMailMessages" />
      <Variable x:TypeArguments="x:Boolean" Name="isEmailFound" />
      <Variable x:TypeArguments="x:String" Name="strFileNamePattern" />
      <Variable x:TypeArguments="x:String" Name="strAttachmentId" />
      <Variable x:TypeArguments="s:String[]" Name="arrPattern" />
      <Variable x:TypeArguments="x:String" Name="strEmailSubjectConfig" />
      <Variable x:TypeArguments="x:String" Name="strEmailSubject" />
      <Variable x:TypeArguments="x:Boolean" Name="isSubjectValid" />
      <Variable x:TypeArguments="x:Boolean" Name="isDatePeriodValid" />
      <Variable x:TypeArguments="s:DateTime" Name="dateCaptured" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listKeywordSubject" />
      <Variable x:TypeArguments="x:Boolean" Name="isAttachmentValid" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listKeywordAttachment" />
      <Variable x:TypeArguments="snm:MailMessage" Name="correctEmailFound" />
      <Variable x:TypeArguments="x:String" Name="attachmentName" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtRawData" />
      <Variable x:TypeArguments="x:String" Name="capturedDate" />
      <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="ienFinalAttachment" />
      <Variable x:TypeArguments="scg:List(x:String)" Name="listSheets" />
      <Variable x:TypeArguments="x:String" Name="strTable" />
      <Variable x:TypeArguments="x:String" Name="strColumn" />
      <Variable x:TypeArguments="x:String" Name="strDateFormat" />
      <Variable x:TypeArguments="scg:List(s:DateTime)" Name="listDate" />
      <Variable x:TypeArguments="x:String" Name="strAssetName" />
      <Variable x:TypeArguments="x:String" Name="strExcelParameter" />
      <Variable x:TypeArguments="sd:DataTable" Name="dtFilteredData" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="868,132.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[String.Format(&quot;{0} [{1}]&quot;, in_TransactionItem.SpecificContent(&quot;PID&quot;).ToString, Now)]" />
    <ui:SetAsset TimeoutMS="{x:Null}" AssetName="[in_Config(&quot;GlobalVarAsset&quot;).ToString]" DisplayName="Set Asset - Reset global var" sap:VirtualizedContainerService.HintSize="868,234.4" sap2010:WorkflowViewState.IdRef="SetAsset_1" Value="[&quot;;&quot;]" />
    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Set_EmailDate_Asset.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="868,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Custom_Workflow\Set_EmailDate_Asset.xaml">
      <ui:InvokeWorkflowFile.Arguments>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_dateStartPeriod">[DateTime.MinValue]</InArgument>
        <InArgument x:TypeArguments="s:DateTime" x:Key="in_dateEndPeriod">[in_datePeriod]</InArgument>
        <InArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="in_listStartEndRange" />
        <InArgument x:TypeArguments="x:String" x:Key="in_assetName">[in_Config("GlobalVarAsset").ToString]</InArgument>
      </ui:InvokeWorkflowFile.Arguments>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:InvokeWorkflowFile>
    <ui:MultipleAssign DisplayName="Multiple Assign - Path" sap:VirtualizedContainerService.HintSize="868,204" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFilePath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.Combine(in_TransactionItem.SpecificContent("PathMasterFolder").ToString, in_TransactionItem.SpecificContent("Key").ToString, in_datePeriod.Year.ToString, in_datePeriod.ToString("yyyy-MM-dd"), $"Traveloka_{in_TransactionItem.SpecificContent("BPID").ToString}_{in_datePeriod.ToString("ddMMMyy")}.{in_TransactionItem.SpecificContent("File Type").ToString}")]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strFolderPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.Combine(in_TransactionItem.SpecificContent("PathMasterFolder").ToString, in_TransactionItem.SpecificContent("Key").ToString, in_datePeriod.Year.ToString, in_datePeriod.ToString("yyyy-MM-dd"))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[strRawFolderPath]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">[Path.Combine(in_dicPath("strRawFolderPath"), in_TransactionItem.SpecificContent("Key").ToString(), in_datePeriod.Year.ToString, in_datePeriod.ToString("yyyy-MM-dd"))]</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <ui:PathExists Resource="{x:Null}" DisplayName="Path Exists" Exists="[isFileExist]" sap:VirtualizedContainerService.HintSize="868,130.4" sap2010:WorkflowViewState.IdRef="PathExists_3" Path="[strFilePath]" PathType="File" />
    <If sap2010:Annotation.AnnotationText="If file doesn't exists in local folder or rerun in config sheet is set to true" Condition="[Not isFileExist Or in_isRerun]" DisplayName="If - File does not exist or rerun" sap:VirtualizedContainerService.HintSize="868,5808.8" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="834.4,5416" sap2010:WorkflowViewState.IdRef="Sequence_6">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="GetEmails.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="772,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_11" UnSafe="False" WorkflowFileName="Custom_Workflow\Get_Emails.xaml">
            <ui:InvokeWorkflowFile.Arguments>
              <OutArgument x:TypeArguments="scg:List(snm:MailMessage)" x:Key="out_listMailMessages">[listMailMessages]</OutArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="in_datePeriod">[in_datePeriod]</InArgument>
              <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
              <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
            </ui:InvokeWorkflowFile.Arguments>
          </ui:InvokeWorkflowFile>
          <If sap2010:Annotation.AnnotationText="Check if emails from specified senderdomain exists within period range" Condition="[Not listMailMessages.Count &gt; 0]" DisplayName="Check if emails found" sap:VirtualizedContainerService.HintSize="772,152.8" sap2010:WorkflowViewState.IdRef="If_4">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="416,198" sap2010:WorkflowViewState.IdRef="Sequence_12">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Throw DisplayName="Business exception - email not found" Exception="[new BusinessRuleException(String.Format(&quot;Report for current period: {0} not found. Please check manually in email inbox.&quot;, in_datePeriod.ToString(&quot;dd-MMM-yy&quot;)))]" sap:VirtualizedContainerService.HintSize="354,113" sap2010:WorkflowViewState.IdRef="Throw_1" />
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_13">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Else>
          </If>
          <Sequence DisplayName="Filtering emails" sap:VirtualizedContainerService.HintSize="772,1652.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="intListMailIndex" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="[intListMailIndex]" DisplayName="For Each email" sap:VirtualizedContainerService.HintSize="593.6,1524" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[listMailMessages]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="snm:MailMessage">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="email" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body of for each email" sap:VirtualizedContainerService.HintSize="558.4,1376" sap2010:WorkflowViewState.IdRef="Sequence_28">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:MultipleAssign DisplayName="Multiple Assign - Set default validation status to false" sap:VirtualizedContainerService.HintSize="496,204" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isSubjectValid]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isDatePeriodValid]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isAttachmentValid]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                    <Sequence DisplayName="Validate email subject &amp; date period" sap:VirtualizedContainerService.HintSize="496,886.4" sap2010:WorkflowViewState.IdRef="Sequence_17">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <ui:MultipleAssign DisplayName="Assigning subject from email &amp; config gsheet, init pattern to remove from the subject" sap:VirtualizedContainerService.HintSize="433.6,204" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
                        <ui:MultipleAssign.AssignOperations>
                          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strEmailSubjectConfig]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[in_TransactionItem.SpecificContent("Subject Email").ToString]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="x:String">[strEmailSubject]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="x:String">[email.Subject]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_9">
                              <ui:AssignOperation.To>
                                <OutArgument x:TypeArguments="s:String[]">[arrPattern]</OutArgument>
                              </ui:AssignOperation.To>
                              <ui:AssignOperation.Value>
                                <InArgument x:TypeArguments="s:String[]" xml:space="preserve">[{
	"\d{1,2}(?:-|\s+)[a-zA-Z]{3}(?:-|\s+)(?:\d{2}|\d{4})\b",
	"\[WARNING: ATTACHMENT UNSCANNED\]\s*",
	"^Fwd:\s*",
	"^Fw:\s*",
	"^Trs:\s*"
}]</InArgument>
                              </ui:AssignOperation.Value>
                            </ui:AssignOperation>
                          </scg:List>
                        </ui:MultipleAssign.AssignOperations>
                      </ui:MultipleAssign>
                      <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="Remove unnecessary words from subject: Fwd, Fw, etc.&#xA;Remove date from subject to prevent it from being calculated with fuzzy" Code="Match match = Regex.Match(io_strEmailSubject, in_arrPattern[0]);&#xA;if (match.Success)&#xA;{&#xA;    string dateString = match.Value;&#xA;    string[] dateParts = dateString.Split(new[] { &quot;-&quot;, &quot; &quot; }, StringSplitOptions.RemoveEmptyEntries);&#xA;&#xA;    if (dateParts.Length == 3)&#xA;    {&#xA;        // Assuming the year is in the format &quot;yy&quot; (e.g., &quot;24&quot; for 2024)&#xA;        int day = int.Parse(dateParts[0]);&#xA;        string month = dateParts[1].ToUpper(); // Convert month to uppercase&#xA;&#x9;&#x9;int year = dateParts[2].Length == 4 ? int.Parse(dateParts[2]) : int.Parse(&quot;20&quot; + dateParts[2]);&#xA;        &#xA;        // Create a DateTime object&#xA;        DateTime date = new DateTime(year, DateTime.ParseExact(month, &quot;MMM&quot;, CultureInfo.InvariantCulture).Month, day);&#xA;&#x9;&#x9;out_dateCaptured = date;&#xA;        &#xA;        // Output the DateTime in a desired format&#xA;        Console.WriteLine(&quot;dateCaptured: &quot; + date.ToString(&quot;dd MMM yyyy&quot;));&#xA;    }&#xA;    else&#xA;    {&#xA;        Console.WriteLine(&quot;Invalid date format&quot;);&#xA;    }&#xA;}&#xA;else&#xA;{&#xA;    Console.WriteLine(&quot;Date not found in the input string.&quot;);&#xA;}&#xA;&#xA;foreach (string pattern in in_arrPattern)&#xA;{&#xA;&#x9;io_strEmailSubject = System.Text.RegularExpressions.Regex.Replace(io_strEmailSubject, pattern, string.Empty, RegexOptions.IgnoreCase);&#xA;&#x9;io_strEmailSubjectConfig = System.Text.RegularExpressions.Regex.Replace(io_strEmailSubjectConfig, pattern, string.Empty, RegexOptions.IgnoreCase);&#xA;}" DisplayName="Invoke Code - Capture and remove date from email subject and email subject config" sap:VirtualizedContainerService.HintSize="433.6,264.8" sap2010:WorkflowViewState.IdRef="InvokeCode_1" Language="CSharp">
                        <ui:InvokeCode.Arguments>
                          <InArgument x:TypeArguments="s:String[]" x:Key="in_arrPattern">[arrPattern]</InArgument>
                          <InOutArgument x:TypeArguments="x:String" x:Key="io_strEmailSubjectConfig">[strEmailSubjectConfig]</InOutArgument>
                          <InOutArgument x:TypeArguments="x:String" x:Key="io_strEmailSubject">[strEmailSubject]</InOutArgument>
                          <OutArgument x:TypeArguments="s:DateTime" x:Key="out_dateCaptured">[dateCaptured]</OutArgument>
                        </ui:InvokeCode.Arguments>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                      </ui:InvokeCode>
                      <Assign DisplayName="Create a list of subject keyword from config" sap:VirtualizedContainerService.HintSize="434,122" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="scg:List(x:String)">[listKeywordSubject]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="scg:List(x:String)">[strEmailSubjectConfig.Trim.Split(" ").ToList]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <TryCatch DisplayName="Try Catch - Validate subject" sap:VirtualizedContainerService.HintSize="434,92" sap2010:WorkflowViewState.IdRef="TryCatch_1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <TryCatch.Try>
                          <Sequence sap:VirtualizedContainerService.HintSize="416,345" sap2010:WorkflowViewState.IdRef="Sequence_14">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This function is to check whether the subject contains all the keywords from config (but this function allows a typo in the word) and check if the date captured from subject equal to week period" Code="int minScoreThreshold = 75;&#xA;bool matchedWithTolerance = true;&#xA;&#xA;foreach (string keyword in in_ListOfKeyword) {&#xA;&#x9;// Split the email subject into individual words&#xA;    string[] emailSubjectWords = in_EmailSubject.Split(' ');&#xA;&#xA;    // Compare the keyword to each word within the email subject&#xA;    bool keywordMatched = emailSubjectWords.Any(word =&gt; Fuzz.Ratio(word, keyword) &gt;= minScoreThreshold);&#xA;&#xA;    if (!keywordMatched)&#xA;    {&#xA;        matchedWithTolerance = false;&#xA;        break;&#xA;    }&#xA;}&#xA;&#xA;if (matchedWithTolerance) {&#xA;&#x9;out_IsSubjectValid = true;&#xA;}&#xA;else out_IsSubjectValid = false;" DisplayName="Function to check whether email subject is correct" sap:VirtualizedContainerService.HintSize="354,260" sap2010:WorkflowViewState.IdRef="InvokeCode_2" Language="CSharp">
                              <ui:InvokeCode.Arguments>
                                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListOfKeyword">[listKeywordSubject]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_EmailSubject">[strEmailSubject.Trim]</InArgument>
                                <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsSubjectValid">[isSubjectValid]</OutArgument>
                              </ui:InvokeCode.Arguments>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:InvokeCode>
                          </Sequence>
                        </TryCatch.Try>
                        <TryCatch.Catches>
                          <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="420,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ActivityAction x:TypeArguments="s:Exception">
                              <ActivityAction.Argument>
                                <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                              </ActivityAction.Argument>
                              <Throw Exception="[New Exception(exception.InnerException.ToString)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_2" />
                            </ActivityAction>
                          </Catch>
                        </TryCatch.Catches>
                      </TryCatch>
                      <If Condition="[(email.Subject.Contains(in_datePeriod.Day.ToString) AndAlso&#xA;email.Subject.ToUpper.Contains(in_datePeriod.ToString(&quot;MMM&quot;).ToUpper) AndAlso&#xA;email.Subject.Contains(in_datePeriod.ToString(&quot;yy&quot;))) Or&#xA;dateCaptured = in_datePeriod]" DisplayName="If - Validate date period" sap:VirtualizedContainerService.HintSize="434,75" sap2010:WorkflowViewState.IdRef="If_5">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,190" sap2010:WorkflowViewState.IdRef="Sequence_15">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign - isDatePeriodValid" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_3">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:Boolean">[isDatePeriodValid]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                              </Assign.Value>
                            </Assign>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,100" sap2010:WorkflowViewState.IdRef="Sequence_16">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <Sequence DisplayName="Validate email attachment" sap:VirtualizedContainerService.HintSize="496,123.2" sap2010:WorkflowViewState.IdRef="Sequence_23">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If Condition="[email.Attachments.Count &gt; 0]" DisplayName="If - Attachment.count &gt; 0" sap:VirtualizedContainerService.HintSize="723.2,1701.6" sap2010:WorkflowViewState.IdRef="If_7">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <If.Then>
                          <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="689.6,1437.6" sap2010:WorkflowViewState.IdRef="Sequence_21">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Create a list of subject keyword from config" sap:VirtualizedContainerService.HintSize="627.2,121.6" sap2010:WorkflowViewState.IdRef="Assign_10">
                              <Assign.To>
                                <OutArgument x:TypeArguments="scg:List(x:String)">[listKeywordAttachment]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="scg:List(x:String)">[in_TransactionItem.SpecificContent("File Name Attachment").ToString.Trim.Split(" ").ToList]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:ForEach x:TypeArguments="snm:Attachment" CurrentIndex="{x:Null}" DisplayName="For Each - Attachment" sap:VirtualizedContainerService.HintSize="627.2,1229.6" sap2010:WorkflowViewState.IdRef="ForEach`1_4" Values="[email.Attachments]">
                              <ui:ForEach.Body>
                                <ActivityAction x:TypeArguments="snm:Attachment">
                                  <ActivityAction.Argument>
                                    <DelegateInArgument x:TypeArguments="snm:Attachment" Name="attachment" />
                                  </ActivityAction.Argument>
                                  <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="592,1081.6" sap2010:WorkflowViewState.IdRef="Sequence_31">
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <ui:InvokeCode ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="This function is to check whether the attachment contains all the keywords from config (but this function allows a typo in the word)" Code="int minScoreThreshold = 75;&#xA;bool matchedWithTolerance = true;&#xA;&#xA;//Split the in_ListOfKeyWord using the dot character&#xA;in_ListOfKeyword = in_ListOfKeyword.SelectMany(s =&gt; s.Split('.')).ToList();&#xA;&#xA;foreach (string keyword in in_ListOfKeyword) {&#xA;    List&lt;string&gt; emailAttachmentWords = in_EmailAttachment.Split(' ').ToList();&#xA;&#x9;emailAttachmentWords = emailAttachmentWords.SelectMany(s =&gt; s.Split('.')).ToList();&#xA;&#xA;    // Compare the keyword to each word within the email attachment&#xA;    bool keywordMatched = emailAttachmentWords.Any(word =&gt; Fuzz.Ratio(word, keyword) &gt;= minScoreThreshold);&#xA;&#xA;    if (!keywordMatched)&#xA;    {&#xA;        matchedWithTolerance = false;&#xA;        break;&#xA;    }&#xA;}&#xA;&#xA;if (matchedWithTolerance) {&#xA;&#x9;out_IsAttachmentValid = true;&#xA;}&#xA;else out_IsAttachmentValid = false;" DisplayName="Function to check whether email attachment is correct" sap:VirtualizedContainerService.HintSize="529.6,264.8" sap2010:WorkflowViewState.IdRef="InvokeCode_5" Language="CSharp">
                                      <ui:InvokeCode.Arguments>
                                        <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_ListOfKeyword">[listKeywordAttachment]</InArgument>
                                        <InArgument x:TypeArguments="x:String" x:Key="in_EmailAttachment">[Path.GetFileName(attachment.Name)]</InArgument>
                                        <OutArgument x:TypeArguments="x:Boolean" x:Key="out_IsAttachmentValid">[isAttachmentValid]</OutArgument>
                                      </ui:InvokeCode.Arguments>
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                    </ui:InvokeCode>
                                    <If Condition="[Path.GetExtension(attachment.Name) = Path.GetExtension(in_TransactionItem.SpecificContent(&quot;File Name Attachment&quot;).ToString)]" DisplayName="If -  Extension matches between config and the attachment" sap:VirtualizedContainerService.HintSize="529.6,730.4" sap2010:WorkflowViewState.IdRef="If_10">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <If.Then>
                                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,377.6" sap2010:WorkflowViewState.IdRef="Sequence_29">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign - isAttachmentValid" sap:VirtualizedContainerService.HintSize="433.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_12">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[isAttachmentValid]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign DisplayName="Assign - attachmentName" sap:VirtualizedContainerService.HintSize="433.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_15">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:String">[attachmentName]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:String">[attachment.Name]</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <ui:Break sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_3" />
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="496,191.2" sap2010:WorkflowViewState.IdRef="Sequence_30">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                          <Assign DisplayName="Assign - isAttachmentValid" sap:VirtualizedContainerService.HintSize="433.6,104.8" sap2010:WorkflowViewState.IdRef="Assign_13">
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">[isAttachmentValid]</OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </Sequence>
                                </ActivityAction>
                              </ui:ForEach.Body>
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:ForEach>
                          </Sequence>
                        </If.Then>
                        <If.Else>
                          <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,102.4" sap2010:WorkflowViewState.IdRef="Sequence_22">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </Sequence>
                        </If.Else>
                      </If>
                    </Sequence>
                    <If Condition="[isSubjectValid AndAlso&#xA;isDatePeriodValid AndAlso&#xA;isAttachmentValid]" DisplayName="If attachment and subject is correct" sap:VirtualizedContainerService.HintSize="496,76" sap2010:WorkflowViewState.IdRef="If_9">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence DisplayName="Then" sap:VirtualizedContainerService.HintSize="496,256" sap2010:WorkflowViewState.IdRef="Sequence_24">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign DisplayName="Assign email to a variable" sap:VirtualizedContainerService.HintSize="433.6,121.6" sap2010:WorkflowViewState.IdRef="Assign_8">
                            <Assign.To>
                              <OutArgument x:TypeArguments="snm:MailMessage">[correctEmailFound]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="snm:MailMessage">[email]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <ui:Break DisplayName="Break from email loops" sap:VirtualizedContainerService.HintSize="433.6,48" sap2010:WorkflowViewState.IdRef="Break_2" />
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,162.4" sap2010:WorkflowViewState.IdRef="Sequence_27">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <If Condition="[intListMailIndex = (listMailMessages.Count - 1)]" DisplayName="If - Last index throw" sap:VirtualizedContainerService.HintSize="353.6,76" sap2010:WorkflowViewState.IdRef="If_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="377.6,180" sap2010:WorkflowViewState.IdRef="Sequence_25">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <Throw DisplayName="Throw email not found" Exception="[new BusinessRuleException(String.Format(&quot;Report for current period: {0} not found. Please check manually in email inbox.&quot;, in_datePeriod.ToString(&quot;MMMM yyyy&quot;)))]" sap:VirtualizedContainerService.HintSize="334.4,90.4" sap2010:WorkflowViewState.IdRef="Throw_3" />
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_26">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
          <Sequence DisplayName="Processing attachment" sap:VirtualizedContainerService.HintSize="772,3370.4" sap2010:WorkflowViewState.IdRef="Sequence_10">
            <Sequence.Variables>
              <Variable x:TypeArguments="x:Int32" Name="intAttachmentIdx" />
              <Variable x:TypeArguments="scg:IEnumerable(x:String)" Name="ienAttachment" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:LogMessage DisplayName="Start processing email" sap:VirtualizedContainerService.HintSize="709.6,132.8" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Info" Message="[in_TransactionItem.SpecificContent(&quot;PID&quot;).ToString + &quot;: Downloading attachment...&quot;]" />
            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Custom_Workflow\Delete_Folder.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="709.6,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_12" UnSafe="False" WorkflowFileName="Custom_Workflow\Delete_Folder.xaml">
              <ui:InvokeWorkflowFile.Arguments>
                <InArgument x:TypeArguments="x:String" x:Key="in_strFolderPath">[strRawFolderPath]</InArgument>
              </ui:InvokeWorkflowFile.Arguments>
            </ui:InvokeWorkflowFile>
            <ui:SaveMailAttachments Attachments="[ienAttachment]" DisplayName="Save Attachments - xlsx" ExcludeInlineAttachments="False" Filter="[attachmentName]" FolderPath="[strRawFolderPath]" sap:VirtualizedContainerService.HintSize="709.6,128" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[correctEmailFound]" OverwriteExisting="False" />
            <Sequence DisplayName="Sequence - Get excel parameter for filtering data" sap:VirtualizedContainerService.HintSize="709.6,123.2" sap2010:WorkflowViewState.IdRef="Sequence_32">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Assign DisplayName="Assign - strAssetName" sap:VirtualizedContainerService.HintSize="469,122" sap2010:WorkflowViewState.IdRef="Assign_14">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[strAssetName]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">["RPA191_ExcelParameter"]</InArgument>
                </Assign.Value>
              </Assign>
              <ui:GetRobotAsset TimeoutMS="{x:Null}" AssetName="[strAssetName]" CacheStrategy="None" DisplayName="Get Asset - Excel parameter" sap:VirtualizedContainerService.HintSize="469,181" sap2010:WorkflowViewState.IdRef="GetRobotAsset_1">
                <ui:GetRobotAsset.Value>
                  <OutArgument x:TypeArguments="x:String">[strExcelParameter]</OutArgument>
                </ui:GetRobotAsset.Value>
              </ui:GetRobotAsset>
              <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="469,414" sap2010:WorkflowViewState.IdRef="TryCatch_3">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <TryCatch.Try>
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="431,163" sap2010:WorkflowViewState.IdRef="MultipleAssign_5">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strColumn]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strExcelParameter.Split(";")(1).Replace("Column:", "")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strTable]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strExcelParameter.Split(";")(2).Replace("HeaderAddress:", "")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_17">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[strDateFormat]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">[strExcelParameter.Split(";")(3).Replace("DateFormat:", "")]</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </TryCatch.Try>
                <TryCatch.Catches>
                  <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="435,22" sap2010:WorkflowViewState.IdRef="Catch`1_3">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                        <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ActivityAction x:TypeArguments="s:Exception">
                      <ActivityAction.Argument>
                        <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
                      </ActivityAction.Argument>
                      <Throw Exception="[New Exception(exception.Message)]" sap:VirtualizedContainerService.HintSize="334,90" sap2010:WorkflowViewState.IdRef="Throw_5" />
                    </ActivityAction>
                  </Catch>
                </TryCatch.Catches>
              </TryCatch>
            </Sequence>
            <ui:ForEach x:TypeArguments="x:String" CurrentIndex="[intAttachmentIdx]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="709.6,2720.8" sap2010:WorkflowViewState.IdRef="ForEach`1_5" Values="[ienAttachment]">
              <ui:ForEach.Body>
                <ActivityAction x:TypeArguments="x:String">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="x:String" Name="attachment" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Body of for each file downloaded" sap:VirtualizedContainerService.HintSize="674.4,2572.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelApplicationScope Password="{x:Null}" CreateNewFile="False" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="612,92.8" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" Visible="False" WorkbookPath="[attachment]">
                      <ui:ExcelApplicationScope.Body>
                        <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="416,233" sap2010:WorkflowViewState.IdRef="Sequence_33">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:ExcelGetWorkbookSheets DisplayName="Get Workbook Sheets" sap:VirtualizedContainerService.HintSize="354,65" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheets_1" Sheets="[listSheets]" />
                            <ui:ExcelReadRange AddHeaders="True" DataTable="[dtRawData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="354,83" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" Range="[strTable]" SheetName="[listSheets(0)]" />
                          </Sequence>
                        </ActivityAction>
                      </ui:ExcelApplicationScope.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:ExcelApplicationScope>
                    <Assign DisplayName="Assign - listDate" sap:VirtualizedContainerService.HintSize="612,123.2" sap2010:WorkflowViewState.IdRef="Assign_16">
                      <Assign.To>
                        <OutArgument x:TypeArguments="scg:List(s:DateTime)">[listDate]</OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="scg:List(s:DateTime)" xml:space="preserve">[dtRawData.AsEnumerable() _
    .Where(Function(r) Not String.IsNullOrWhiteSpace(r.Field(Of String)(strColumn))) _
    .Where(Function(r) DateTime.TryParseExact(r.Field(Of String)(strColumn), strDateFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, Nothing)) _
    .Select(Function(r) DateTime.ParseExact(r.Field(Of String)(strColumn), strDateFormat, CultureInfo.InvariantCulture)) _
    .Distinct() _
    .ToList()]</InArgument>
                      </Assign.Value>
                    </Assign>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="612,132.8" sap2010:WorkflowViewState.IdRef="LogMessage_4" Message="[String.Format(&quot;listDate: {0}&quot;, String.Join(&quot;, &quot;, listDate))]" />
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Set_EmailDate_Asset.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="612,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_20" UnSafe="False" WorkflowFileName="Custom_Workflow\Set_EmailDate_Asset.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_dateStartPeriod">[listDate.Min]</InArgument>
                        <InArgument x:TypeArguments="s:DateTime" x:Key="in_dateEndPeriod">[listDate.Max]</InArgument>
                        <InArgument x:TypeArguments="scg:List(s:DateTime)" x:Key="in_listStartEndRange">[New List(of DateTime)]</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_assetName">[in_Config("GlobalVarAsset").ToString]</InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:ForEach x:TypeArguments="s:DateTime" CurrentIndex="{x:Null}" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="612,1908" sap2010:WorkflowViewState.IdRef="ForEach`1_8" Values="[listDate]">
                      <ui:ForEach.Body>
                        <ActivityAction x:TypeArguments="s:DateTime">
                          <ActivityAction.Argument>
                            <DelegateInArgument x:TypeArguments="s:DateTime" Name="dateX" />
                          </ActivityAction.Argument>
                          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="576.8,1743.2" sap2010:WorkflowViewState.IdRef="Sequence_35">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <Assign DisplayName="Assign - strFilePath" sap:VirtualizedContainerService.HintSize="514,122" sap2010:WorkflowViewState.IdRef="Assign_17">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFilePath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Path.Combine(in_TransactionItem.SpecificContent("PathMasterFolder").ToString, in_TransactionItem.SpecificContent("Key").ToString, dateX.Year.ToString, dateX.ToString("yyyy-MM-dd"), $"Traveloka_{in_TransactionItem.SpecificContent("BPID").ToString}_{dateX.ToString("ddMMMyy")}.{in_TransactionItem.SpecificContent("File Type").ToString}")]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <Assign DisplayName="Assign - strFolderPath" sap:VirtualizedContainerService.HintSize="514,122" sap2010:WorkflowViewState.IdRef="Assign_19">
                              <Assign.To>
                                <OutArgument x:TypeArguments="x:String">[strFolderPath]</OutArgument>
                              </Assign.To>
                              <Assign.Value>
                                <InArgument x:TypeArguments="x:String">[Path.GetDirectoryName(strFilePath)]</InArgument>
                              </Assign.Value>
                            </Assign>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Custom_Workflow\Delete_Folder.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="514,153" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_13" UnSafe="False" WorkflowFileName="Custom_Workflow\Delete_Folder.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strFolderPath">[strFolderPath]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:CreateDirectory ContinueOnError="{x:Null}" Output="{x:Null}" DisplayName="Create Folder - Destination folder" sap:VirtualizedContainerService.HintSize="514,120" sap2010:WorkflowViewState.IdRef="CreateDirectory_1" Path="[strFolderPath]" />
                            <Sequence DisplayName="Sequence - Filtering Data" sap:VirtualizedContainerService.HintSize="514.4,694.4" sap2010:WorkflowViewState.IdRef="Sequence_36">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign DisplayName="Assign - LINQ for filtering data" sap:VirtualizedContainerService.HintSize="452,123" sap2010:WorkflowViewState.IdRef="Assign_18">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="sd:DataTable">[dtFilteredData]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="sd:DataTable" xml:space="preserve">[dtRawData.AsEnumerable() _
    .Where(Function(r) Not r.IsNull(strColumn) AndAlso
	DateTime.TryParseExact(r.Field(Of String)(strColumn), strDateFormat, CultureInfo.InvariantCulture, DateTimeStyles.None, Nothing) AndAlso
	DateTime.ParseExact(r.Field(Of String)(strColumn), strDateFormat, CultureInfo.InvariantCulture) = dateX) _
    .CopyToDataTable()]</InArgument>
                                </Assign.Value>
                              </Assign>
                              <ui:ForEach x:TypeArguments="sd:DataColumn" CurrentIndex="{x:Null}" DisplayName="For Each - Remove any column that startswith &quot;Column&quot;" sap:VirtualizedContainerService.HintSize="452,442.4" sap2010:WorkflowViewState.IdRef="ForEach`1_9" Values="[dtRawData.Columns.Cast(Of DataColumn).Where(Function(c) c.ColumnName.StartsWith(&quot;Column&quot;) ).ToArray]">
                                <ui:ForEach.Body>
                                  <ActivityAction x:TypeArguments="sd:DataColumn">
                                    <ActivityAction.Argument>
                                      <DelegateInArgument x:TypeArguments="sd:DataColumn" Name="col" />
                                    </ActivityAction.Argument>
                                    <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="416,294" sap2010:WorkflowViewState.IdRef="Sequence_37">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <ui:RemoveDataColumn Column="{x:Null}" ColumnIndex="{x:Null}" ColumnName="[col.ColumnName]" DataTable="[dtFilteredData]" DisplayName="Remove Data Column" sap:VirtualizedContainerService.HintSize="354,209" sap2010:WorkflowViewState.IdRef="RemoveDataColumn_1" />
                                    </Sequence>
                                  </ActivityAction>
                                </ui:ForEach.Body>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </ui:ForEach>
                            </Sequence>
                            <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DataTable="[dtFilteredData]" DisplayName="Write Range Workbook" sap:VirtualizedContainerService.HintSize="514.4,156" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="[listSheets(0)]" WorkbookPath="[strFilePath]" />
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Custom_Workflow\Delete_Sheets.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="514.4,153.6" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_18" UnSafe="False" WorkflowFileName="Custom_Workflow\Delete_Sheets.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_listSheetToRemove">[New List(of String)]</InArgument>
                                <InArgument x:TypeArguments="scg:List(x:String)" x:Key="in_listSheetToKeep">[New List(of String)]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[strFilePath]</InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                            <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Add_Queue_Item.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="514.4,136.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_19" UnSafe="False" WorkflowFileName="Custom_Workflow\Add_Queue_Item.xaml">
                              <ui:InvokeWorkflowFile.Arguments>
                                <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[in_Config]</InArgument>
                                <InArgument x:TypeArguments="ui:QueueItem" x:Key="in_TransactionItem">[in_TransactionItem]</InArgument>
                                <InArgument x:TypeArguments="s:DateTime" x:Key="in_datePeriod">[dateX]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strFilePath">[strFilePath]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strRawFilePath">[attachment]</InArgument>
                                <InArgument x:TypeArguments="x:String" x:Key="in_strDateRange">
                                  <Literal x:TypeArguments="x:String" Value="" />
                                </InArgument>
                              </ui:InvokeWorkflowFile.Arguments>
                            </ui:InvokeWorkflowFile>
                          </Sequence>
                        </ActivityAction>
                      </ui:ForEach.Body>
                    </ui:ForEach>
                    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="612,76" sap2010:WorkflowViewState.IdRef="CommentOut_1">
                      <ui:CommentOut.Body>
                        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="416,196" sap2010:WorkflowViewState.IdRef="Sequence_34">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:ReadRange Range="{x:Null}" SheetName="{x:Null}" AddHeaders="True" DataTable="[dtRawData]" DisplayName="Read Range Workbook" sap:VirtualizedContainerService.HintSize="354,111" sap2010:WorkflowViewState.IdRef="ReadRange_1" WorkbookPath="[attachment]" />
                        </Sequence>
                      </ui:CommentOut.Body>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:CommentOut>
                  </Sequence>
                </ActivityAction>
              </ui:ForEach.Body>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
            </ui:ForEach>
          </Sequence>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence DisplayName="Else" sap:VirtualizedContainerService.HintSize="416,200" sap2010:WorkflowViewState.IdRef="Sequence_7">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="354,115" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[$&quot;File Traveloka_{in_TransactionItem.SpecificContent(&quot;BPID&quot;).ToString()}_{in_datePeriod.ToString(&quot;ddMMMyy&quot;)}.{in_TransactionItem.SpecificContent(&quot;File Type&quot;).ToString} already exists...&quot;]" />
        </Sequence>
      </If.Else>
    </If>
  </Sequence>
</Activity>